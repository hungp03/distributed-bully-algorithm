/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ptithcm.bully.algorithm.ui;

import com.ptithcm.bully.algorithm.model.Node;
import com.ptithcm.bully.algorithm.model.Server;
import java.awt.event.WindowAdapter;

import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.util.Objects;

/**
 * @author acer
 */
public class FirstNode extends javax.swing.JFrame {

    private TransactionHistory historyFrame = null;
    private Server sv;

    /**
     * Creates new form FirstNode
     */
    public FirstNode() {
        initComponents();
        this.tpChatbox.setContentType("text/html");
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                if (JOptionPane.showConfirmDialog(null,
                        "Bạn chắc chắn muốn thoát?", "Thoát chương trình?",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
//                    System.out.println("EXIT PROGRAM");
                    if (sv != null) {
                        try {
                            sv.WriteLog("Node_log.txt");
                        } catch (IOException ex) {
                            System.out.println("NOT CONNECTED");
                        }
                    }
                    System.exit(0);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbPort = new javax.swing.JLabel();
        tfPort = new javax.swing.JTextField();
        btnConnect = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tpLog = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfAccountMoney = new javax.swing.JTextField();
        cbReceiveMoneyId = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        tfMoneyValue = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfMoneyMessage = new javax.swing.JTextField();
        btnSendMoney = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnOpenHistoryTransact = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tpChatbox = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        lbServerStatus = new javax.swing.JLabel();
        lbWarningCb = new javax.swing.JLabel();
        lbWarningMoney = new javax.swing.JLabel();
        lbWarningMsg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Transaction Node");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        lbPort.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbPort.setText("Port");

        tfPort.setEditable(true);
        tfPort.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tfPort.setText("3000");
        tfPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPortActionPerformed(evt);
            }
        });

        btnConnect.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnConnect.setText("OPEN");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        tpLog.setEditable(false);
        tpLog.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jScrollPane2.setViewportView(tpLog);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("LỊCH SỬ THAO TÁC");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 255, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("CHUYỂN TIỀN");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 0));
        jLabel7.setText("Tài khoản");

        tfAccountMoney.setEditable(false);
        tfAccountMoney.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tfAccountMoney.setForeground(new java.awt.Color(255, 102, 51));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Số tiền cần chuyển");

        tfMoneyValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMoneyValueActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Lời nhắn");

        tfMoneyMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMoneyMessageActionPerformed(evt);
            }
        });

        btnSendMoney.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSendMoney.setText("Chuyển tiền");
        btnSendMoney.setEnabled(false);
        btnSendMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendMoneyActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 255, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Thông báo");

        btnOpenHistoryTransact.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnOpenHistoryTransact.setText("Mở lịch sử giao dịch");
        btnOpenHistoryTransact.setEnabled(false);
        btnOpenHistoryTransact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenHistoryTransactActionPerformed(evt);
            }
        });

        tpChatbox.setEditable(false);
        tpChatbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jScrollPane3.setViewportView(tpChatbox);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Tài khoản nhận");

        lbServerStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        lbWarningCb.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbWarningCb.setForeground(new java.awt.Color(255, 0, 0));

        lbWarningMoney.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbWarningMoney.setForeground(new java.awt.Color(255, 0, 0));
        lbWarningMoney.setPreferredSize(null);

        lbWarningMsg.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbWarningMsg.setForeground(new java.awt.Color(255, 0, 0));
        lbWarningMsg.setPreferredSize(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPort, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbServerStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(jLabel1)
                        .addGap(143, 143, 143))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfMoneyMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSendMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnOpenHistoryTransact, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbWarningMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbReceiveMoneyId, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lbWarningCb, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tfMoneyValue, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tfAccountMoney)
                                            .addComponent(lbWarningMoney, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbPort, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfPort, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addComponent(lbServerStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tfAccountMoney, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbReceiveMoneyId, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfMoneyValue, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbWarningMoney, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                            .addComponent(lbWarningCb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfMoneyMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSendMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbWarningMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOpenHistoryTransact, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPortActionPerformed

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        if (this.tfPort.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập port", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            // Hiển thị dialog để người dùng nhập ID
            String inputId = JOptionPane.showInputDialog(this, "Nhập Account ID (0 - 4):", "Input ID", JOptionPane.QUESTION_MESSAGE);
            if (inputId == null) {
                return;
            }
            if (inputId.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập ID hợp lệ", "Error", JOptionPane.WARNING_MESSAGE);
                return;
            }
            int serverId = 0;
            try {
                serverId = Integer.parseInt(inputId);
                if (serverId < 0 || serverId > 4) {
                    JOptionPane.showMessageDialog(this, "ID phải từ 0-4", "Error", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập ID hợp lệ", "Error", JOptionPane.WARNING_MESSAGE);
                return;
            }
            int port = Integer.parseInt(this.tfPort.getText());
//            int port = 3000;
            this.sv = new Server(this, port, serverId, this.tpLog, this.tpChatbox, this.tfAccountMoney, this.btnSendMoney);
            for (int i = 0; i < 5; i++) {
                if (i != this.sv.getId()) {
                    this.cbReceiveMoneyId.addItem(String.valueOf(i));
                }
            }

            // Khởi động server
            this.sv.execute();
            this.lbServerStatus.setText("Server is running on port " + tfPort.getText());
            this.btnConnect.setEnabled(false);
            this.btnSendMoney.setEnabled(true);
            this.btnOpenHistoryTransact.setEnabled(true);
            // Kiểm tra và thông báo coordinator
            Node n = this.sv.getCoordinator();
            if (n == null) {
                for (Node item : sv.getListNode()) {
                    // Xử lý nếu không có coordinator
                }
                sv.bully(3);
            } else if (n.getId() == this.sv.getId()) {
                System.out.println("Đây chính là điều phối viên");
            } else {
                JOptionPane.showMessageDialog(this, "Coordinator có id: " + n.getId(), "Thông báo", JOptionPane.DEFAULT_OPTION);
            }

            this.tfAccountMoney.setText(String.valueOf(sv.connectService.getAccountMoney(sv.getId())));
            this.cbReceiveMoneyId.setEnabled(true);
            this.tfMoneyValue.setEditable(true);
            this.tfMoneyMessage.setEditable(true);
            this.btnSendMoney.setEnabled(true);
            this.btnOpenHistoryTransact.setEnabled(true);
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void tfMoneyValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMoneyValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMoneyValueActionPerformed

    private void tfMoneyMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMoneyMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMoneyMessageActionPerformed

    private void btnSendMoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendMoneyActionPerformed
        Node n = this.sv.getCoordinator();
        if (this.tfMoneyValue.getText().isEmpty()) {
            this.lbWarningMoney.setText("Không được để trống");
            return;
        }
        if (n == null) {
            sv.bully(3);
            System.out.println("Coordinator is null");
        } else {
            int revId, money;
            String msg;
            try {
                revId = Integer.parseInt(Objects.requireNonNull(this.cbReceiveMoneyId.getSelectedItem()).toString());
            } catch (NumberFormatException e) {
                lbWarningCb.setText("Bạn chưa chọn Id người nhận");
                return;
            }
            try {
                money = Integer.parseInt(this.tfMoneyValue.getText().trim());
                int cash = this.sv.connectService.getAccountMoney(sv.getId());
                if (money < 0) {
                    lbWarningMoney.setText("Số tiền muốn gửi phải lớn hơn 0");
                    return;
                }
                if (money > cash) {
                    lbWarningMoney.setText("Số tiền muốn gửi lớn hơn tài khoản hiện có");
                    return;
                }
            } catch (NumberFormatException e) {
                lbWarningMoney.setText("Số tiền muốn gửi không đúng định dạng");
                return;
            }
            if (tfMoneyMessage.getText().trim().isEmpty()) {
                lbWarningMsg.setText("Lời nhắn không được để trống");
                return;
            }
            msg = tfMoneyMessage.getText().trim();
            //#sendMoney because you are coordinator now
//            if (n.getId() == sv.getId()) {
//                //tu chuyen tien
//                sv.connectService.sendMoney(sv.getId(), revId, money, msg);
//                sv.tpSettext(tpLog, String.format(sv.getCurrentTime() + ":" + n.getId() + ": Đã chuyển %d đến %d", money, revId));
//                sv.tpSetMessage(tpChatbox, sv.getCurrentTime() + ": Chuyển tiền thành công!", 0);
//                JOptionPane.showMessageDialog(this, "Chuyển tiền thành công!");
//                cbReceiveMoneyId.setSelectedIndex(0);
//                tfMoneyMessage.setText("");
//                tfMoneyValue.setText("");
//                lbWarningCb.setText("");
//                lbWarningMoney.setText("");
//                lbWarningMsg.setText("");
//                this.tfAccountMoney.setText(String.valueOf(sv.connectService.getAccountMoney(sv.getId())));
//                try {
//                    for (Node i : sv.getListNode()) {
//                        if (i.getId() == revId) {
//                            Socket socket = new Socket(i.getHost(), i.getPort());
//                            DataOutputStream writer = new DataOutputStream(socket.getOutputStream());
//                            writer.writeUTF(String.format("receivemoney-%d-%d", sv.getId(), money));
//                            writer.close();
//                            socket.close();
//                        }
//                    }
//                } catch (IOException ignored) {
//                }
//                return;
//            }
            //#sendrequesttocoordinator
            String reqMsg = String.format("transfers-%d-%d-%d-%s", sv.getId(), revId, money, msg);
            sv.sendMoneyRequestToCoordinator(reqMsg);
            //gui yeu cau chuyen tien
            cbReceiveMoneyId.setSelectedIndex(0);
            tfMoneyMessage.setText("");
            tfMoneyValue.setText("");
            lbWarningCb.setText("");
            lbWarningMoney.setText("");
            lbWarningMsg.setText("");
            sv.tpSettext(tpLog, String.format(sv.getCurrentTime() + ":" + n.getId() + "Da gui yeu cau chuyen %d den %d", money, revId));
            sv.tpSetMessage(tpChatbox, sv.getCurrentTime() + ": Đã gửi yêu cầu chuyển tiền!", 0);
        }
    }//GEN-LAST:event_btnSendMoneyActionPerformed

    private void btnOpenHistoryTransactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenHistoryTransactActionPerformed
        if (historyFrame == null) {
            historyFrame = new TransactionHistory(this.sv.getId());
        }

        historyFrame.setVisible(true);
        // Nếu cửa sổ ở trạng thái minimize, khôi phục lại trạng thái bình thường
        historyFrame.setExtendedState(JFrame.NORMAL);
    }//GEN-LAST:event_btnOpenHistoryTransactActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnOpenHistoryTransact;
    private javax.swing.JButton btnSendMoney;
    private javax.swing.JComboBox<String> cbReceiveMoneyId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbPort;
    private javax.swing.JLabel lbServerStatus;
    private javax.swing.JLabel lbWarningCb;
    private javax.swing.JLabel lbWarningMoney;
    private javax.swing.JLabel lbWarningMsg;
    private javax.swing.JTextField tfAccountMoney;
    private javax.swing.JTextField tfMoneyMessage;
    private javax.swing.JTextField tfMoneyValue;
    private javax.swing.JTextField tfPort;
    private javax.swing.JTextPane tpChatbox;
    private javax.swing.JTextPane tpLog;
    // End of variables declaration//GEN-END:variables
}
